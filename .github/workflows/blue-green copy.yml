# This is a basic workflow to help you get started with Actions

name: Blue-Green-strategy-2

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ACR_NAME: pocb3.azurecr.io
  RESOURCE_GROUP: poc-b3
  AKS_CLUSTER_NAME: poc-b3
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deployapp:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: Azure/docker-login@v1
        with:
          login-server: pocb3.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - run: |
          cd /nginx-html/
          docker build . -t pocb3.azurecr.io/k8sdemo:${{ github.sha }}
          docker push pocb3.azurecr.io/k8sdemo:${{ github.sha }}

      # This action can be used to set cluster context before other actions like azure/k8s-deploy, azure/k8s-create-secret or any kubectl commands (in script) can be run subsequently in the workflow.
      - name: Set cluster context
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}
          resource-group: ${{ env.RESOURCE_GROUP }}
      
      - uses: Azure/k8s-deploy@v3.1
        with:
          images: 'pocb3.azurecr.io/k8sdemo:${{ github.sha }}'
          manifests: |
              ./kubernetes/service.yaml
              ./kubernetes/blue-deploy.yaml
          strategy: blue-green
          action: deploy
          route-method: ingress # substitute with service/smi as per need
          #version-switch-buffer: 15          

  approveapp:
    runs-on: ubuntu-latest
    needs: deployapp
    environment: akspromotion
    steps:
      - run: echo asked for approval

  promotereject:
    runs-on: ubuntu-latest
    needs: approveapp
    steps:
      - uses: actions/checkout@v2

      - name: Set cluster context
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}
          resource-group: ${{ env.RESOURCE_GROUP }}

      - uses: Azure/k8s-deploy@v3.1
        if: ${{ success() }}
        with:
          images: 'pocb3.azurecr.io/k8sdemo:${{ github.sha }}'
          manifests: |
              ./kubernetes/service.yaml
              ./kubernetes/blue-deploy.yaml
          strategy: blue-green
          action: promote
          route-method: ingress 

      - uses: Azure/k8s-deploy@v3.1
        if: ${{ failure() }}
        with:
          images: 'pocb3.azurecr.io/k8sdemo:${{ github.sha }}'
          manifests: |
              ./kubernetes/service.yaml
              ./kubernetes/blue-deploy.yaml
          strategy: blue-green
          action: reject
          route-method: ingress 
          